{"version":3,"sources":["artwork/card_back.jpeg","components/loginTitle.js","components/loginPage.js","components/loggedInWrapper.js","components/loginPageWrapper.js","components/signupPage.js","components/cardBack.js","components/cardFront.js","components/Card.js","components/cardAndInfo.js","components/cardDraw.js","components/getCardOrientation.js","components/governingCard.js","components/home.js","components/readingThumbnail.js","components/fullReadingCard.js","components/fullReadingModal.js","components/userReadings.js","components/detailedCardModal.js","components/cardDescriptionList.js","components/cardDescriptionLists.js","components/About.js","components/userAccountMenu.js","components/arcanaTrend.js","components/orientationTrend.js","components/trends.js","components/accountSettings.js","App.js","actions/userActions.js","actions/cardActions.js","actions/readingActions.js","index.js","reducers/cards.js","reducers/readings.js","reducers/users.js"],"names":["module","exports","LoginTitle","className","LoginPage","state","email","password","errors","validateForm","length","handleSubmit","event","user","preventDefault","props","loginUser","handleChange","target","id","value","setState","prevState","redirectToSignup","history","push","handleErrors","map","error","key","isUserLoggingIn","redirectToApp","loggedInStatus","this","onSubmit","type","placeholder","onChange","disabled","onClick","Component","withRouter","LoggedInWrapper","redirectToLogin","children","LoginPageWrapper","document","querySelector","style","display","Signup","first_name","last_name","createUserAccount","redirectToSignin","alert","prevProps","CardBack","src","require","alt","handleClick","card","period","CardFront","upright","image","orientation","reversed","transform","Card","drawOrDeleteCard","card_position","drawCard","deleteCard","isFlipped","card_refresh","flipDirection","CardAndInfo","cardOrientationMeaning","upright_meaning","reversed_meaning","name","CardDraw","updateStateWithDrawnCard","newCardAtrributes","past","reading","present","future","setCardAttributes","drawnCard","full_meaning","Math","round","random","user_id","setCardDeduplicationArray","Object","entries","cards","floor","indexOf","initialState","updateStateWithNewReading","fetchReadings","clearAllCards","updateAppAfterReadingSubmission","saveReading","postReading","validateCards","cardAttributes","GoverningCard","Home","governingCard","ReadingThumbnail","getCardImageOrientation","displayFullReading","date_time_created","FullReadingCard","FullReadingModal","filter","cardToCompare","closeModalAndNotifyUser","closeFullReading","deleteReading","icon","index","UserReadings","view","showFullReading","readingToShow","position","readings","DetailedCardModal","closeDetailedCard","CardDescriptionList","includes","arcana","displayDetailedCard","CardDescriptionLists","showDetailedCard","cardToShow","About","UserAccountMenu","toggleUserAccountMenu","ArcanaTrend","nixDefaultLanguage","arcanaDataForPie","shift","innerRadius","colorScale","data","x","arcanaCardData","arcana_key","arcana_value","charAt","toUpperCase","slice","y","populateArcanaPie","trendText","OrientationTrend","orientationDataForPie","orientationCardData","Trends","metricsLoading","fetchUserArcana","fetchUserOrientations","fetchHighUserArcana","fetchHighUserOrientation","fetchAllArcana","fetchAllOrientations","fetchHighArcanaForAllUsers","fetchHighOrientationForAllUsers","userArcanaMetrics","users","metrics","user_arcana","allArcanaMetrics","all_arcana","userOrientationMetrics","user_orientations","allOrientationMetrics","all_orientations","highUserArcana","high_arcana","highUserOrientation","high_orientation","highArcanaForAllUsers","all_high_arcana","highOrientationForAllUsers","all_high_orientation","cardData","arcanaData","userArcana","wands","swords","cups","pentacles","major_arcana","allArcana","orientationData","userOrientation","allOrientations","getHighPercentageText","highArcanaOrOrientationValue","highPercentageTextData","none","connect","AccountSettings","updateUserAccount","successfulAccountUpdate","library","add","faBars","faCaretDown","faCaretUp","faTimes","App","redirectToLoginIfUserDeleted","window","location","user_account_menu_display","updateUserAfterAccountSettingsEdit","logOutAndClear","logoutUser","deleteAndClear","userId","confirm","deleteUserAccount","fetchCards","deleted","to","path","render","isLoggedIn","update_errors","signup_errors","isLoggingIn","login_errors","dispatch","fetch","method","body","JSON","stringify","headers","then","resp","json","status","payload","logged_in","readingObject","readingObj","updatedReadingObj","assign","reading_id","highest","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","storeStates","store","createStore","applyMiddleware","thunk","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.8f252420.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/card_back.9f14152e.jpeg\";","import React from 'react'\n\nexport const LoginTitle = () => {\n    return (\n        <div className=\"login_title\">\n            <p className=\"main_title\">ORI</p>\n            <p className=\"subtitle\">Tarot</p>\n        </div>\n    )\n}\n\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { LoginTitle } from './loginTitle'\n\nclass LoginPage extends Component {\n\n    state = {\n        email:'',\n        password:'',    \n        errors:'',\n    }\n\n    validateForm = () => {\n        return this.state.email.length && this.state.password.length;\n      }\n\n    handleSubmit =  (event) => {\n      let user = {\n        email: this.state.email,\n        password: this.state.password\n      }\n        event.preventDefault()\n        this.props.loginUser(user)\n    };\n    \n\n    handleChange = (event) => {\n        const {id, value} = event.target \n        this.setState(prevState => ({\n            ...prevState,\n            [id] : value\n        }))\n    }\n\n    redirectToSignup = () => {\n        this.props.history.push(\"/create_account\"); \n    }\n\n    handleErrors = () => {\n      if (this.props.errors){\n          return (\n            <div>\n              <ul>\n              {this.props.errors.map(error => {\n              return <li key={error}>{error}</li>\n                })}\n              </ul>\n            </div>\n          )\n      }\n      return null   \n    }\n\n    isUserLoggingIn = () => {\n      if (this.props.isUserLoggingIn) {\n        return (\n          <div>\n            <p>Logging you in.  One moment please...</p>\n          </div>\n        )\n      }\n    }\n\n\n    redirectToApp = () => {\n      if (this.props.loggedInStatus){\n          this.props.history.push(\"/home\");\n      }\n    }\n\n      componentDidUpdate (){\n          this.redirectToApp()\n      }\n\n    render(){\n\n        const {email, password} = this.state\n        return(\n            <div className=\"credential_background\">\n              \n              <div className=\"credential\"> \n\n                <div className=\"form_half\">\n                  <form className=\"login_form\" onSubmit={this.handleSubmit}>\n                      <label className=\"label\">\n                          <input \n                          type=\"email\" \n                          id=\"email\" \n                          className=\"input\" \n                          placeholder=\"Enter email\" \n                          value={email}\n                          onChange={this.handleChange}\n                          />\n                      </label>\n                      <br></br>\n                      <label className=\"label\">\n                          <input \n                          type=\"password\" \n                          id=\"password\" \n                          className=\"input\" \n                          placeholder=\"Enter password\"\n                          value={password} \n                          onChange={this.handleChange}\n                          />\n                      </label>\n                      <br></br>\n                          <input \n                          type=\"submit\" \n                          value=\"LOGIN\" \n                          className=\"submit_button\"\n                          disabled={!this.validateForm()}\n                          />\n                  </form>\n\n                  <br></br>\n\n                  <button onClick={this.redirectToSignup} className=\"create_account-button\">SIGN UP</button>\n\n                  <div>\n                      {this.handleErrors()}\n                      {this.isUserLoggingIn()}\n                  </div>\n                </div>\n\n                <div className=\"app_title_half\">\n                </div>\n\n              </div>\n\n                <LoginTitle />\n                \n            </div>\n        )\n    }\n}\n\nexport default withRouter(LoginPage) ","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nclass LoggedInWrapper extends Component {\n    \n    redirectToLogin = () => {\n        this.props.history.push('/')\n    }\n\n    UNSAFE_componentWillMount(){\n        return this.props.loggedInStatus ? null : this.redirectToLogin()\n    }\n    \n    render(){\n        return this.props.loggedInStatus ? \n         (\n            <div className=\"wrapper\">\n                {this.props.children}\n            </div>\n        ) : null \n    }\n}\n\nexport default withRouter(LoggedInWrapper)  ","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nclass LoginPageWrapper extends Component {\n    \n    componentDidMount(){\n        document.querySelector('.app_nav').style.display = \"none\";\n    }\n\n    componentWillUnmount(){\n        document.querySelector('.app_nav').style.display = \"flex\";\n    }\n    \n    render(){\n        return (\n            <div className=\"wrapper\">\n                {this.props.children}\n            </div>\n        ) \n    }\n}\n\n\nexport default withRouter(LoginPageWrapper)  ","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom'\nimport { LoginTitle } from './loginTitle'\n\nclass Signup extends Component {\n\n  constructor() {\n    super();\n    this.state = { \n      first_name: '',\n      last_name: '',\n      email: '',\n      password: '',\n     };\n  }\n\nhandleChange = (event) => {\n    const {id, value} = event.target\n    this.setState({\n      [id]: value\n    })\n  };\n\nhandleSubmit = (event) => {\n    event.preventDefault()\n    const {first_name, last_name, email, password} = this.state\n    let user = {\n      first_name: first_name,\n      last_name: last_name,\n      email: email,\n      password: password\n    }\n    this.props.createUserAccount(user)\n  };\n\n  redirectToSignin = () => {\n    this.props.history.push('/')\n  }\n\n  redirectToApp = () => {\n    this.props.history.push('/home')\n    alert(\"You've sucessfully created your account! Click OK to log in.\")\n  }\n\nhandleErrors = () => {\n  if (this.props.errors) {\n      return (\n        <div>\n          <ul>{this.props.errors.map((error) => {\n            return <li key={error}>{error}</li>\n          })}\n          </ul> \n        </div>\n      )\n    }\n  return null \n  }\n\n  componentDidUpdate (prevProps) {\n    if (prevProps.loggedInStatus !== this.props.loggedInStatus) {\n        if (this.props.loggedInStatus === true) {\n          this.redirectToApp()\n        }\n    }\n  }\n\nrender() {\n    const {first_name, last_name, email, password} = this.state\nreturn (\n      <div className=\"credential_background\">\n\n        <div className=\"credential\">\n    \n            <div className=\"form_half\">\n\n              <h2>Create an Account</h2>\n\n              <form className=\"signup_form\" onSubmit={this.handleSubmit}>\n              <input\n                  placeholder=\"First Name\"\n                  type=\"text\"\n                  id=\"first_name\"\n                  className=\"input\"\n                  value={first_name}\n                  onChange={this.handleChange}\n                />\n                <br></br>\n              <input\n                  placeholder=\"Last Name\"\n                  type=\"text\"\n                  id=\"last_name\"\n                  className=\"input\"\n                  value={last_name}\n                  onChange={this.handleChange}\n                />\n                <br></br>\n                <input\n                  placeholder=\"Email\"\n                  type=\"text\"\n                  id=\"email\"\n                  className=\"input\"\n                  value={email}\n                  onChange={this.handleChange}\n                />\n                <br></br>\n                <input \n                  placeholder=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  className=\"input\"\n                  value={password}\n                  onChange={this.handleChange}\n                />\n                <br></br>\n              \n                <button \n                placeholder=\"submit\" \n                type=\"submit\" \n                className=\"submit_button\">\n                  CREATE ACCOUNT\n                </button>\n            \n              </form>\n\n              <button onClick={this.redirectToSignin} className=\"link\">RETURN TO LOGIN</button>\n\n              <div>\n\n                {this.handleErrors()}\n\n              </div>\n            </div>\n\n            <div className=\"app_title_half\">\n            </div>\n\n          </div>\n\n          <LoginTitle /> \n\n      </div>\n    );\n  }\n}\nexport default withRouter(Signup);","import React from 'react'\n\nexport const CardBack = (props) => {\n    return (\n         <div className=\"card_back\"> \n               <img \n               src={require (\"../artwork/card_back.jpeg\")} \n               alt=\"card back art\"\n               onClick={props.handleClick(props.card.period,\"card_back\")}\n               ></img>\n        </div>\n    )\n}\n\n","import React from 'react'\n\nexport const CardFront = (props) => {\n\n    const cardDisplay = {\n        upright: <div className=\"card_front\">\n                        <img \n                        className=\"upright\" \n                        src={props.card.image} \n                        alt='card'\n                        onClick={props.handleClick(props.card.period, props.card.orientation, \"card_front\")}\n                        ></img> \n                    </div>,\n\n        reversed: <div className=\"card_front\">\n                        <img \n                        className=\"reversed\" \n                        style={{transform: 'rotate(180deg)'}} \n                        src={props.card.image} \n                        alt='card'\n                        onClick={props.handleClick(props.card.period, props.card.orientation, \"card_front\")}\n                        ></img> \n                    </div>\n    }\n   \n    return cardDisplay[props.card.orientation] || null \n}\n\n","import React, { Component } from 'react'\nimport ReactCardFlip from 'react-card-flip';\nimport { CardBack } from './cardBack'\nimport { CardFront } from './cardFront'\n\nclass Card extends Component {\n\n    constructor(){\n        super()\n        this.state = {\n        isFlipped: true \n        }\n    }\n\n    drawOrDeleteCard = (period, card_position) => {\n        if (card_position === \"card_back\"){\n            return this.props.drawCard(period)\n         }\n         return this.props.deleteCard(period)\n    }\n\n    handleClick = (period, card_position) => () => {\n        this.setState(prevState => ({ isFlipped: !prevState.isFlipped }));\n        this.drawOrDeleteCard(period, card_position)\n    }\n\n    componentDidUpdate(prevProps){\n        if(prevProps.card_refresh !== this.props.card_refresh){\n            this.setState({isFlipped: true})\n        }\n    }\n\n    render(){\n\n        return (\n        <ReactCardFlip \n        isFlipped={this.state.isFlipped} \n        flipDirection=\"horizontal\" \n        > \n            <CardFront handleClick={this.handleClick} card={this.props.card}/>\n    \n            <CardBack handleClick={this.handleClick} card={this.props.card}/>\n          \n        </ReactCardFlip>\n        )\n    }     \n       \n}\n\nexport default Card \n\n\n","import React from 'react';\nimport Card from './Card'\n\nexport const CardAndInfo = (props) => {\n    \n    let cardOrientationMeaning; \n        if (props.card.orientation === \"upright\") {\n            cardOrientationMeaning = props.card.upright_meaning\n        } else if (props.card.orientation === \"reversed\") {\n            cardOrientationMeaning = props.card.reversed_meaning\n        }\n\n    return (\n             <div className=\"card_container\">\n\n                <div className=\"card_image\">\n                    <Card card={props.card} card_refresh={props.card_refresh} drawCard={props.drawCard} deleteCard={props.deleteCard}/>\n                </div>\n\n                <div className=\"card_info\">\n                    <h3>{props.card.name}</h3>\n                    <p>{props.card.orientation}</p>\n                    <p>{cardOrientationMeaning}</p>\n                </div>\n\n            </div>\n    )\n}\n\n\n","import React, { Component } from 'react';\nimport { CardAndInfo } from './cardAndInfo'\nimport { getCardOrientation } from './getCardOrientation'\n\nclass CardDraw extends Component {\n    \n   constructor () {\n    super();\n    this.state = this.initialState;\n   }\n\n   get initialState() {\n\n        let cardAttributes = {\n            name: '', \n            full_meaning: '',\n            upright_meaning: '',\n            image: '',\n            orientation: '',\n            id: '',\n            user_id:''\n        }\n       return {\n           reading: {\n                past: {\n                    period: 'past',\n                    ...cardAttributes\n                },\n\n                present: {\n                    period: 'present',\n                    ...cardAttributes\n                },\n\n                future: {\n                    period: 'future',\n                    ...cardAttributes\n                }\n            },\n            card_refresh: false\n       }\n   }\n\n   updateStateWithDrawnCard = (newCardAtrributes) => {\n    \n    const updatedCardState = {\n\n            past: () => { return this.setState({\n                ...this.state,\n                reading: {\n                ...this.state.reading, \n                    past: { ...newCardAtrributes }\n                }   \n            })},\n\n            present: () => { return this.setState({\n                ...this.state,\n                reading: {\n                ...this.state.reading, \n                    present: { ...newCardAtrributes }\n                }   \n            })},\n\n            future: () => { return this.setState({\n                ...this.state,\n                reading: {\n                ...this.state.reading, \n                    future: { ...newCardAtrributes }\n                }   \n            })}\n\n        }\n\n    return updatedCardState[newCardAtrributes.period]() || this.state \n\n    }\n   \n   setCardAttributes = (drawnCard, period) => {\n       let newCardAtrributes = {\n        period: period, \n        name: drawnCard.name,\n        full_meaning: drawnCard.full_meaning,\n        upright_meaning: drawnCard.upright,\n        reversed_meaning: drawnCard.reversed,\n        image: drawnCard.image,\n        orientation: getCardOrientation(),\n        id: drawnCard.id,\n        user_id: this.props.user.id\n     }\n     this.updateStateWithDrawnCard(newCardAtrributes)\n   }\n\n   setCardDeduplicationArray = () => {\n        return Object.entries(this.state.reading).map(([period, value]) => {\n            return value.id\n        })\n   }\n\n    drawCard = (period) => {\n        let drawnCard\n\n        do {\n            drawnCard = this.props.cards[Math.floor(Math.random() * this.props.cards.length)]\n        } while (this.setCardDeduplicationArray().indexOf(drawnCard.id) !== -1)\n        \n        \n        this.setCardAttributes(drawnCard, period)\n    }\n   \n    deleteCard = (period) => {\n\n        const resetCardState = {\n            \n                past: () => { return this.setState({\n                    ...this.state,\n                    reading: {\n                        ...this.state.reading, \n                        past: this.initialState.reading.past\n                    }\n                })},\n\n                present: () => { return this.setState({\n                    ...this.state,\n                    reading: {\n                        ...this.state.reading, \n                        present: this.initialState.reading.present\n                    }\n                })},\n\n                future: () => { return this.setState({\n                    ...this.state,\n                    reading: {\n                        ...this.state.reading, \n                        future: this.initialState.reading.future\n                    }\n                })}\n            }\n\n        return resetCardState[period]() || this.state \n\n    }\n\n    updateStateWithNewReading = () => {\n        this.setState(this.props.fetchReadings(this.props.user.id))\n    }\n\n    clearAllCards = () => {\n        this.setState({...this.initialState, card_refresh: prevState => !prevState.card_refresh})\n        this.updateStateWithNewReading()\n    }\n\n    updateAppAfterReadingSubmission = () => {\n        alert('You have successfully submitted your reading.  Click readings in the menu to view.')\n        this.clearAllCards()\n    }\n\n    saveReading =  () => {\n        this.props.postReading(this.state.reading)\n        this.updateAppAfterReadingSubmission()\n    }\n\n    validateCards = () => {\n        return this.state.reading.past.name.length &&\n        this.state.reading.present.name.length &&\n        this.state.reading.future.name.length\n    }\n  \n    render(){\n        return (\n        <div className=\"CardDraw\">   \n      \n            <div className=\"card_row\">\n          \n                <div className=\"card_container\">\n                    <h2>Past</h2> \n                    <CardAndInfo \n                    card={this.state.reading.past} \n                    drawCard={this.drawCard} \n                    deleteCard={this.deleteCard}\n                    card_refresh={this.state.card_refresh}\n                    /> \n                </div>\n\n                <div className=\"card_container\">\n                    <h2>Present</h2>\n                    <CardAndInfo \n                    card={this.state.reading.present} \n                    drawCard={this.drawCard} \n                    deleteCard={this.deleteCard}\n                    card_refresh={this.state.card_refresh}\n                    />\n                </div>\n\n                <div className=\"card_container\">\n                    <h2>Future</h2> \n                    <CardAndInfo \n                    card={this.state.reading.future} \n                    drawCard={this.drawCard} \n                    deleteCard={this.deleteCard}\n                    card_refresh={this.state.card_refresh}\n                    /> \n                </div>\n\n           </div>\n           <div className=\"game_functions\">\n\n            <button className=\"save_reading_button\" onClick={this.saveReading} disabled={!this.validateCards()}>SAVE READING</button>\n                \n            <button className=\"clear_card_button\" onClick={this.clearAllCards}>REFRESH</button>\n            </div>\n        </div>\n        )\n     \n    }   \n}\n\nexport default CardDraw\n","export  const getCardOrientation = () => {\n    return ['upright', 'reversed'][Math.round(Math.random())]\n}","import React from 'react';\n\nexport const GoverningCard = (props) => {\n    \n    return (\n        <div>\n            <h3>Session Governing Card</h3>\n            <img src={props.card.image} alt=\"session_card_image\"/>\n            <p>{props.card.name}</p>\n            <p>{props.card.full_meaning}</p>\n        </div>\n    )\n}\n\n","import React, { Component } from 'react';\nimport CardDraw from './cardDraw'\nimport { GoverningCard } from './governingCard'\n\nclass Home extends Component {\n    \n    constructor(){\n        super();\n        this.state = {\n            governingCard: null \n        }\n    }\n\n    componentDidMount (){\n        return (\n            this.setState({\n                ...this.state,\n                governingCard: <GoverningCard card={this.props.cards[Math.floor(Math.random() * this.props.cards.length)]}/>\n            })\n        )\n    }\n    \n    render (){\n        return (\n            <div className=\"home\">\n    \n                <div className=\"card_draw_and_governing_card\">\n    \n                    <div className=\"card_draw\">\n                        <CardDraw \n                        user={this.props.user}\n                        cards={this.props.cards} \n                        postReading={this.props.postReading} \n                        fetchReadings={this.props.fetchReadings}\n                        /> \n                    </div>\n    \n                    <div className=\"governing_card\">\n                        {this.state.governingCard}\n                    </div>\n    \n                </div>\n    \n            </div>\n        )\n    }\n   \n}\n\nexport default Home","import React, { Component } from 'react';\n\nclass ReadingThumbnail extends Component {\n\n    getCardImageOrientation = () => {\n        if (this.props.reading.cards[0].orientation === \"reversed\") {\n            return {transform: 'rotate(180deg)'}\n        }\n       return {}\n    }\n\n    render(){\n        return (\n            <div className=\"reading_thumbnail\">\n                <img \n                src={this.props.reading.cards[0].image} \n                alt=\"reading_pic\" \n                style={this.getCardImageOrientation()} \n                onClick={() => this.props.displayFullReading(this.props.reading)} \n                />\n                <h3>{this.props.reading.date_time_created}</h3>\n            </div>\n        )\n    }\n}\n\nexport default ReadingThumbnail","import React from 'react'\n\nexport const FullReadingCard = (props) => {\n    \n    let cardOrientationMeaning; \n    if (props.card.orientation === \"upright\") {\n        cardOrientationMeaning = props.card.upright_meaning\n    } else if (props.card.orientation === \"reversed\") {\n        cardOrientationMeaning = props.card.reversed_meaning\n    }\n\n    return (\n        <div className=\"full_reading_card\">\n            <h3>{props.card.period}</h3>\n            <img src={props.card.image} alt=\"card_image\" style={props.getCardImageOrientation(props.card)} /> \n            <p>{props.card.name}</p>\n            <p>{props.card.orientation}</p>\n            <p>{cardOrientationMeaning}</p>\n        </div>\n    )\n}","import React, { Component } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { FullReadingCard } from './fullReadingCard'\n\nclass FullReadingModal extends Component {\n\n    getCardImageOrientation = (card) => {\n        if (this.props.reading.cards.filter(cardToCompare => card.id === cardToCompare.id)[0].orientation === \"reversed\") {\n            return {transform: 'rotate(180deg)'}\n        }\n       return {}\n    }\n\n    closeModalAndNotifyUser = () => {\n        this.props.closeFullReading()\n        alert(\"You have successfully deleted that reading.\")\n    }\n  \n    deleteReading = (reading) => {\n        this.props.deleteReading(reading)\n        this.closeModalAndNotifyUser()\n    }\n \n    render(){\n        return this.props.reading.cards ? (\n        <div className=\"modal_container\">\n\n            <div className=\"full_reading_modal\">\n                \n            <button onClick={() => this.props.closeFullReading()} className=\"close_modal\"><FontAwesomeIcon icon=\"times\" />  CLOSE</button>\n            \n            <h2>{this.props.reading.date_time_created}</h2> \n\n                <div className=\"full_reading\">\n                    {this.props.reading.cards.map((card, index) => {\n                        return <FullReadingCard key={index} card={card} getCardImageOrientation={this.getCardImageOrientation}/>\n                    })}\n\n                </div>\n\n                <button onClick={() => this.deleteReading(this.props.reading)} className=\"delete_button\">DELETE READING</button>\n                        \n               \n\n            </div>\n\n        </div>\n           \n        ) : null \n    }\n}\n\nexport default FullReadingModal","import React, { Component } from 'react';\nimport ReadingThumbnail from './readingThumbnail'\nimport FullReadingModal from './fullReadingModal';\n\nclass UserReadings extends Component {\n\n    state = {\n        view: null,\n        showFullReading: false, \n        readingToShow: {}\n    }\n    \n    displayFullReading = (readingToShow) => {\n        this.setState({\n            view: {position: \"fixed\"},\n            showFullReading: true, \n            readingToShow\n        })\n    }\n\n    closeFullReading = () => {\n        this.setState({\n            ...this.state, \n            view: null,\n            showFullReading: false \n        })\n    }\n\n    componentWillMount(){\n        this.props.fetchReadings(this.props.user.id)\n      }\n\n    render(){\n        return (\n            <div className=\"user_readings_component\" style={this.state.view}>\n\n                <h2>Your Saved Readings</h2>\n\n                <div className=\"user_readings_list\">\n                    {this.props.readings[0] ? this.props.readings.map((reading, index) => {\n                        return <ReadingThumbnail key={index} reading={reading} displayFullReading={this.displayFullReading}/>\n                        }\n                    ) : <p>You don't have any readings yet.  Click \"Home\" above and do your first one!</p>}\n                </div>\n                \n                {this.state.showFullReading ? <FullReadingModal \n                    user={this.props.user}\n                    reading={this.state.readingToShow} \n                    fetchReadings={this.props.fetchReadings}\n                    closeFullReading={this.closeFullReading} \n                    deleteReading={this.props.deleteReading}\n                /> : null }\n\n            </div>\n        )\n    }\n}\n\nexport default UserReadings","import React from \"react\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst DetailedCardModal = (props) => {\n    \n    return props.card ? (\n        <div className=\"modal_container\">\n\n            <div className=\"detailed_card_modal\">\n                \n            <button onClick={() => props.closeDetailedCard()} className=\"close_modal\"><FontAwesomeIcon icon=\"times\" />  CLOSE</button>\n            \n            <h2>{props.card.name}</h2> \n\n                <div className=\"detailed_card\">\n                \n                        <img src={props.card.image} alt=\"card_image\" /> \n                        <p><em>Full Meaning:</em></p>\n                        <p>{props.card.full_meaning}</p>\n                        <p><em>Upright Meaning:</em></p>\n                        <p>{props.card.upright}</p>\n                        <p><em>Reversed Meaning:</em></p>\n                        <p>{props.card.reversed}</p>\n                \n                </div>\n\n            </div>\n\n        </div>\n           \n        ) : null \n}\n\nexport default DetailedCardModal","import React from 'react'\n\nexport const CardDescriptionList = (props) => {\n    return (\n         <div className=\"tarot_suit\">\n            {props.cards.filter(card => card.image.includes(props.arcana)).map((card, index) => {\n                return <button key={index} className=\"detailed_card_link\" onClick={() => props.displayDetailedCard(card.id)}>{card.name}</button>\n                }\n            )}\n        </div>\n    )\n}\n\n","import React, { Component } from 'react';\nimport DetailedCardModal from './detailedCardModal'\nimport { CardDescriptionList } from './cardDescriptionList';\n\nclass CardDescriptionLists extends Component {\n\n    state = {\n        view: null, \n        showDetailedCard: false,\n        cardToShow: {}\n    }\n   \n    displayDetailedCard = (id) => {\n        \n        let cardToShow = this.props.cards.filter(card => card.id === id)[0]\n      \n        this.setState({\n            view: {position: \"fixed\"},\n            showDetailedCard: true,\n            cardToShow\n        })\n    }\n\n    closeDetailedCard = () => {\n        this.setState({\n            view: null, \n            showDetailedCard:false \n        })\n    }\n\n    render(){\n    \n        return (\n            <div className=\"detailed_card_container\" style={this.state.view}>\n                    \n                <h2>The Major Arcana</h2>\n\n                <CardDescriptionList \n                cards={this.props.cards} \n                displayDetailedCard={this.displayDetailedCard} \n                arcana=\"major\" />\n\n                <h2>Cups</h2>\n\n                <CardDescriptionList \n                cards={this.props.cards} \n                displayDetailedCard={this.displayDetailedCard} \n                arcana=\"cups\" />\n\n                <h2>Wands</h2>\n\n                <CardDescriptionList \n                cards={this.props.cards} \n                displayDetailedCard={this.displayDetailedCard} \n                arcana=\"wands\" />\n\n                <h2>Swords</h2>\n\n                <CardDescriptionList \n                cards={this.props.cards} \n                displayDetailedCard={this.displayDetailedCard} \n                arcana=\"swords\" />\n\n                <h2>Pentacles</h2>\n                <CardDescriptionList \n                cards={this.props.cards} \n                displayDetailedCard={this.displayDetailedCard} \n                arcana=\"pentacles\" />\n                    \n                {this.state.showDetailedCard ? <DetailedCardModal card={this.state.cardToShow} closeDetailedCard={this.closeDetailedCard}/> : null }\n                   \n            </div>\n        )\n    }\n}\n\nexport default CardDescriptionLists","import React from \"react\"\n\nexport const About = () => {\n    return (\n        <div className=\"about_text\">\n            <h2> About ORI Tarot </h2>\n            \n            <br />\n\n            <p>\n                ORI Tarot is a tarot card application that allows you to create simple \"3-card\" readings.\n                From the home page, you are presented with a traditional three-card spread. Each card can be\n                flipped to show a card applicable to your past, present, or future.  If you want to keep your readings,\n                you can save them to your account to review later.  You can also refresh a reading if you want to start over.\n                To view all your readings (with the date and time of the reading), just navigate to User Readings.  Tarot \n                reading can be a great way to engage in some sustained introspection.  \n            </p>\n                \n        </div>\n    )\n}\n\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst UserAccountMenu = (props) => (\n    <div className=\"user_account_menu\"> \n        <div className=\"user_menu_open\">\n            \n            <button onClick={() => {props.toggleUserAccountMenu()}}>\n                \n                <p className=\"user_name\">{props.user.first_name} {props.user.last_name} <FontAwesomeIcon icon=\"caret-down\" /></p>\n\n            \n            </button>\n        \n        </div>\n    </div>    \n)\n\nexport default UserAccountMenu \n ","import React from 'react'\nimport { VictoryPie } from 'victory';\n\nexport const ArcanaTrend = (props) => {\n\n    const populateArcanaPie = () => {\n        let arcanaDataForPie = [{\n            x: \"No data for visualization yet.\"\n        }]\n        Object.entries(props.arcanaCardData).map((arcana_key, arcana_value) => {\n            if (arcana_key[1] > 0) {\n                    arcanaDataForPie.push({x: `${arcana_key[0].charAt(0).toUpperCase() + arcana_key[0].slice(1)} ${arcana_key[1]}%`, y: arcana_key[1]})\n            }\n            return arcanaDataForPie\n        })\n        return nixDefaultLanguage(arcanaDataForPie)\n    }\n\n   const nixDefaultLanguage = (arcanaDataForPie) => {\n        if (arcanaDataForPie.length > 1) {\n            arcanaDataForPie.shift()\n        }\n        return arcanaDataForPie\n   }\n               \n    return (\n        <div className=\"trend_block_data\">\n            <div className=\"trend_block_figures\">\n                <div className=\"trend_block_figures_key\">\n\n                    <VictoryPie \n                    innerRadius={75}\n                    colorScale={[\"maroon\", \"darkgreen\", \"darkblue\", \"darkgoldenrod\", \"black\"]}\n                    data={populateArcanaPie()}\n                    />\n \n                </div>\n            </div>\n            <div className=\"trend_block_explanation\">\n                <div className=\"trend_block_explanation_text\">{props.trendText}</div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport { VictoryPie } from 'victory';\n\nexport const OrientationTrend = (props) => {\n\n    let orientationDataForPie\n    \n    if (props.orientationCardData.upright > 0 ||\n        props.orientationCardData.reversed > 0) {\n            orientationDataForPie = [\n                {x: `Upright ${props.orientationCardData.upright}%`, y: props.orientationCardData.upright},\n                {x: `Reversed ${props.orientationCardData.reversed}%`, y: props.orientationCardData.reversed}\n            ]\n    } else { \n        orientationDataForPie =[{\n            x: \"No data for visualization yet.\"\n        }]\n    }\n\n    return (\n        <div className=\"trend_block_data\">\n            <div className=\"trend_block_figures\">\n                <div className=\"trend_block_figures_key\">\n\n                    <VictoryPie \n                    innerRadius={75}\n                    colorScale={[\"darkgoldenrod\", \"black\"]}\n                    data={orientationDataForPie}\n                    />\n                        \n                </div>\n            </div>\n                <div className=\"trend_block_explanation\">\n                    <div className=\"trend_block_explanation_text\">{props.trendText}</div>\n                </div>\n            </div>\n    )\n}","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { ArcanaTrend } from './arcanaTrend'\nimport { OrientationTrend } from './orientationTrend'\n\nclass Trends extends Component {\n\n    constructor(){\n        super()\n        this.state = {\n            metricsLoading: true, \n        }\n    }\n    \n    componentDidMount(){\n        this.props.fetchUserArcana(this.props.user.id)\n        this.props.fetchUserOrientations(this.props.user.id)\n        this.props.fetchHighUserArcana(this.props.user.id)\n        this.props.fetchHighUserOrientation(this.props.user.id)\n        this.props.fetchAllArcana()\n        this.props.fetchAllOrientations()\n        this.props.fetchHighArcanaForAllUsers()\n        this.props.fetchHighOrientationForAllUsers()\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.metricsLoading !== this.props.metricsLoading) {\n            this.setState({...this.state, metricsLoading: false})\n        }\n    }\n\n    render (){\n\n        const userArcanaMetrics = this.props.users.metrics.user_arcana\n        const allArcanaMetrics = this.props.users.metrics.all_arcana\n        const userOrientationMetrics = this.props.users.metrics.user_orientations\n        const allOrientationMetrics = this.props.users.metrics.all_orientations\n        const highUserArcana = this.props.users.metrics.high_arcana\n        const highUserOrientation = this.props.users.metrics.high_orientation\n        const highArcanaForAllUsers = this.props.users.metrics.all_high_arcana\n        const highOrientationForAllUsers = this.props.users.metrics.all_high_orientation \n\n        const cardData = {\n            arcanaData: {\n                userArcana: {\n                    wands: typeof userArcanaMetrics.wands !== \"undefined\" ? userArcanaMetrics.wands : 0,\n                    swords: typeof userArcanaMetrics.swords !== \"undefined\" ? userArcanaMetrics.swords : 0,\n                    cups: typeof userArcanaMetrics.cups !== \"undefined\" ? userArcanaMetrics.cups : 0,\n                    pentacles: typeof userArcanaMetrics.pentacles !== \"undefined\" ? userArcanaMetrics.pentacles : 0,\n                    major_arcana: typeof userArcanaMetrics.major_arcana !== \"undefined\" ? userArcanaMetrics.major_arcana : 0\n                },\n                allArcana: {\n                    wands: typeof allArcanaMetrics.wands !== \"undefined\" ? allArcanaMetrics.wands : 0,\n                    swords: typeof allArcanaMetrics.swords !== \"undefined\" ? allArcanaMetrics.swords : 0,\n                    cups: typeof allArcanaMetrics.cups !== \"undefined\" ? allArcanaMetrics.cups : 0,\n                    pentacles: typeof allArcanaMetrics.pentacles !== \"undefined\" ? allArcanaMetrics.pentacles : 0,\n                    major_arcana: typeof allArcanaMetrics.major_arcana !== \"undefined\" ? allArcanaMetrics.major_arcana : 0\n                }\n            },\n            orientationData: {\n                userOrientation: {\n                    upright: typeof userOrientationMetrics.upright !== \"undefined\" ? userOrientationMetrics.upright : 0,\n                    reversed: typeof userOrientationMetrics.reversed !== \"undefined\" ? userOrientationMetrics.reversed : 0\n                },\n                allOrientations: {\n                    upright: typeof allOrientationMetrics.upright !== \"undefined\" ? allOrientationMetrics.upright : 0,\n                    reversed: typeof allOrientationMetrics.reversed !== \"undefined\" ? allOrientationMetrics.reversed : 0\n                }\n            }\n        }\n\n        const getHighPercentageText = (highArcanaOrOrientationValue) => {\n            const highPercentageTextData = {\n                wands: \"Mostly WANDS have been drawn.  Wands are the arcana of inspiration, intention, and ambition.  It could be that, lately, you've been feeling creative, inspired, spurred to action, and/or envisioning outcomes.\",\n                swords: \"Mostly SWORDS have been drawn.  Swords combine the emotion of cups and the intentionality of wands--they are the arcana of action.  Several swords in your readings might mean that there is a lot of commotion in your life as you move toward a final goal.\",\n                cups: \"Mostly CUPS have been drawn.  Cups are the arcana of emotion and intuition.  A lot of cups in your readings can signal that the main forces at play in your current circumstances are rooted in the emotional realm.\",\n                pentacles: \"Mostly PENTACLES have been drawn.  Pentacles are the arcana of hopes made manifest, the home, and material gain.  Given the high number of pentacles in your readings, you could be enjoying the fruits of your labor or more likely, deriving inspiration from them to continue your work.\",\n                major_arcana: \"Mostly MAJOR ARCANA have been drawn.  The major arcana are the trump cards of the Tarot Deck, dealing with substantial life issues.  Take it as a sign that you need to pause and do some self-reflection.\",\n                upright: \"Most drawn cards are upright.  While there is no inherent meaning to this, you can take it as a sign that for now, status quo is an appealing option.\",\n                reversed: \"Most drawn cards are reversed.  Cards often have the opposite meaning when in the reversed orientation. They may contribute to a feeling that things aren't right or that you have a lack of clarity.  Most often, however, they are just a different perspective from which to interpret the path forward.\",\n                none: \"You haven't drawn any cards yet (or the data is still loading).  Check back here after you've completed a few readings to get your stats.\"\n            }\n            if (highPercentageTextData[highArcanaOrOrientationValue]) {\n                return highPercentageTextData[highArcanaOrOrientationValue]\n            }\n            return highPercentageTextData['none']\n        }\n\n        return (\n            <div className=\"trends\">\n                \n                <div className=\"trends_title\">\n                    <h2>Your Trends</h2>\n                </div>\n\n                <div className=\"trends_data\">\n\n                    <div className=\"trend_block\">\n                        <div className=\"trend_block_title\">\n                            <h3>Your Arcana Metrics</h3>\n                        </div>\n                      \n                            <ArcanaTrend \n                            arcanaCardData={cardData.arcanaData.userArcana}\n                            trendText = {getHighPercentageText(highUserArcana)}\n                            /> \n                    </div>\n\n                    <div className=\"trend_block\">\n                        <div className=\"trend_block_title\">\n                            <h3>Arcana Metrics for All Users</h3>\n                        </div>\n                      \n                            <ArcanaTrend \n                            arcanaCardData={cardData.arcanaData.allArcana}\n                            trendText = {getHighPercentageText(highArcanaForAllUsers)}\n                            /> \n                        \n                    </div> \n\n                    <div className=\"trend_block\">\n                        <div className=\"trend_block_title\">\n                            <h3>Your Orientation Metrics</h3>\n                        </div>\n                      \n                            <OrientationTrend \n                            orientationCardData={cardData.orientationData.userOrientation}\n                            trendText = {getHighPercentageText(highUserOrientation)}\n                            /> \n                        \n                    </div>\n\n                    <div className=\"trend_block\">\n                        <div className=\"trend_block_title\">\n                            <h3>Orientation Metrics for All Users</h3>\n                        </div>\n                      \n                            <OrientationTrend \n                            orientationCardData={cardData.orientationData.allOrientations}\n                            trendText = {getHighPercentageText(highOrientationForAllUsers)}\n                            />   \n                        \n                    </div>\n\n                </div>\n            </div>\n                    \n        )\n    }\n   \n}\n\nconst mapStateToProps = state => {\n    return {\n    users: state.users, \n    }\n}\n\nexport default connect(mapStateToProps)(Trends)","import React, { Component } from 'react';\n\nclass AccountSettings extends Component {\n\n  constructor() {\n    super();\n    this.state = { \n      first_name: '',\n      last_name: '',\n      email: '',\n      password: ''\n     };\n  }\n\n\nvalidateForm = () => {\n  return this.state.first_name.length || \n  this.state.last_name.length ||\n  this.state.email.length ||\n  this.state.password.length;\n}\n\n  handleChange = (event) => {\n    const {id, value} = event.target\n    this.setState(prevState => ({\n      ...prevState,\n      [id]: value\n    }))\n  };\n\nhandleSubmit = (event) => {\n    event.preventDefault()\n    let user = {\n      id: this.props.user.id, \n      first_name: this.state.first_name,\n      last_name: this.state.last_name,\n      email: this.state.email,\n      password: this.state.password.length ? this.state.password : this.props.user.password \n    }\n    this.props.updateUserAccount(user)\n  };\n\nsuccessfulAccountUpdate = () => {\n    alert(\"You've sucessfully updated your account information.\")\n    return this.setState({\n        first_name: '',\n        last_name: '',\n        email: '',\n        password: '',\n        errors: ''\n      })\n  }\n\nhandleErrors = () => {\n  if (this.props.errors){\n      return (\n        <div>\n          <ul>{this.props.errors.map((error) => {\n            return <li key={error}>{error}</li>\n          })}\n          </ul> \n        </div>\n      )\n    }\n  return null \n  }\n\n  componentDidUpdate (prevProps) {\n    if (prevProps.user !== this.props.user) {\n          this.successfulAccountUpdate()\n    }\n  }\n\n\nrender() {\n\n    const {first_name, last_name, email, password} = this.state\n\n    return (\n             <div className=\"update_account\">\n\n              <h2>Update Your Account Information</h2>\n              <p>Update by editing the form below.</p>\n\n              <form className=\"update_account_form\" onSubmit={this.handleSubmit}>\n              <input\n                  placeholder={this.props.user.first_name ? this.props.user.first_name : null}\n                  type=\"text\"\n                  id=\"first_name\"\n                  className=\"update_input\"\n                  value={first_name}\n                  onChange={this.handleChange}\n                />\n                <br></br>\n              <input\n                  placeholder={this.props.user.last_name ? this.props.user.last_name : null}\n                  type=\"text\"\n                  id=\"last_name\"\n                  className=\"update_input\"\n                  value={last_name}\n                  onChange={this.handleChange}\n                />\n                <br></br>\n                <input\n                  placeholder={this.props.user.email ? this.props.user.email : null}\n                  type=\"text\"\n                  id=\"email\"\n                  className=\"update_input\"\n                  value={email}\n                  onChange={this.handleChange}\n                />\n                <br></br>\n                <input \n                  placeholder=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  className=\"update_input\"\n                  value={password}\n                  onChange={this.handleChange}\n                />\n                <br></br>\n              \n                <button \n                placeholder=\"submit\" \n                type=\"submit\" \n                className=\"update_submit_button\"\n                disabled={!this.validateForm()}>\n                  UPDATE ACCOUNT\n                </button>\n            \n              </form>\n\n              <div>\n                {this.handleErrors()}\n              </div>\n            </div>\n\n    );\n  }\n}\nexport default AccountSettings","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\"\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faBars, faCaretDown, faCaretUp, faTimes} from '@fortawesome/free-solid-svg-icons'\nimport { fetchCards } from './actions/cardActions'\nimport { fetchReadings, postReading, deleteReading } from './actions/readingActions'\nimport { fetchUserArcana, fetchAllArcana, fetchUserOrientations, fetchAllOrientations, loginUser, logoutUser, createUserAccount, deleteUserAccount, updateUserAccount, fetchHighUserArcana, fetchHighUserOrientation, fetchHighArcanaForAllUsers, fetchHighOrientationForAllUsers } from './actions/userActions'\nimport LoginPage from './components/loginPage';\nimport LoggedInWrapper from './components/loggedInWrapper'\nimport LoginPageWrapper from './components/loginPageWrapper'\nimport Signup from './components/signupPage'\nimport Home from './components/home'\nimport UserReadings from './components/userReadings'\nimport CardDescriptionLists from './components/cardDescriptionLists';\nimport { About } from './components/About'\nimport UserAccountMenu from './components/userAccountMenu'\nimport Trends from './components/trends'\nimport AccountSettings from './components/accountSettings'\n\nlibrary.add(faBars, faCaretDown, faCaretUp, faTimes)\n\nclass App extends Component {   \n\n  constructor() {\n    super();\n    this.state = { \n      user_account_menu_display: {display: 'none'}\n     };\n  }\n\n    redirectToLoginIfUserDeleted = () => { \n        window.location = 'http://localhost:3000'\n    }\n\n    toggleUserAccountMenu = () => {\n      this.state.user_account_menu_display.display === 'none' ?\n      this.setState({\n        ...this.state,\n        user_account_menu_display: {display: 'flex'}\n      }) :\n      this.setState({\n        ...this.state,\n        user_account_menu_display: {display: 'none'}\n      })\n    }\n\n    updateUserAfterAccountSettingsEdit = (data) => {\n      this.setState({\n        ...this.state,\n        user: data\n      })\n    }\n\n    logOutAndClear = () => {\n      this.setState({\n        ...this.state,\n        user_account_menu_display: {display: 'none'}\n      })\n      this.props.logoutUser()\n    }\n\n    deleteAndClear = (userId) => {\n      this.setState({\n        ...this.state,\n        user_account_menu_display: {display: 'none'}\n      })\n      if (window.confirm('Are you sure you want to delete your account?')) {\n        this.props.deleteUserAccount(userId)\n      }\n    }\n \n  componentDidMount (){\n      this.props.fetchCards()\n    }\n\n  componentDidUpdate(){\n      if (this.props.deleted === true) {\n        this.redirectToLoginIfUserDeleted()\n      }\n  }\n\n\n  render() {\n    \n    return (\n    <div className=\"top_level\">\n\n    <Router>\n\n      <div className=\"App\">\n\n        <div className=\"app_nav\">\n\n          <div className=\"app_title\"> \n            <p>ORI TAROT</p>\n          </div>  \n\n          <div className=\"menu_container\">\n\n            <div className=\"nav_item\"> \n              <Link to=\"/home\">HOME</Link> \n            </div>\n\n            <div className=\"nav_item\"> \n              <Link to=\"/user_readings\">YOUR READINGS</Link> \n            </div>\n\n            <div className=\"nav_item\"> \n              <Link to=\"/card_descriptions\">CARD DESCRIPTIONS</Link>\n            </div>\n\n            <div className=\"nav_item\"> \n              <Link to=\"/about\">ABOUT</Link> \n            </div>\n\n            <div className=\"nav_item\"> \n              <Link to=\"/\" onClick={() => this.logOutAndClear()}>LOGOUT</Link> \n            </div>\n\n          </div>\n\n          {this.props.user ? <UserAccountMenu user={this.props.user} toggleUserAccountMenu={this.toggleUserAccountMenu}/> : null} \n\n        </div>\n\n        <div className=\"user_account_menu_options\" style={this.state.user_account_menu_display}>\n\n            <div>\n              <Link to=\"/trends\" onClick={() => this.toggleUserAccountMenu()}>YOUR TRENDS</Link>\n            </div>\n\n            <div>\n              <Link to=\"/account_settings\" onClick={() => this.toggleUserAccountMenu()}>ACCOUNT SETTINGS</Link>\n            </div>\n\n            {this.props.user ?   <div><Link to=\"#\" onClick={() => this.deleteAndClear(this.props.user.id)}>DELETE ACCOUNT</Link></div> : null}\n\n        </div>\n      \n        \n        <Switch>\n    \n          <Route\n            path='/about'\n            render={() => (\n              <LoggedInWrapper loggedInStatus={this.props.isLoggedIn}>\n                <About />           \n              </LoggedInWrapper>\n            )}\n          />\n\n          <Route\n            path='/card_descriptions'\n            render={() => (\n              <LoggedInWrapper loggedInStatus={this.props.isLoggedIn}>\n                <CardDescriptionLists \n                  cards={this.props.cards} \n                />           \n              </LoggedInWrapper>\n            )}\n          />\n          \n          <Route\n            path='/home'\n            render={() => (\n              <LoggedInWrapper loggedInStatus={this.props.isLoggedIn}>\n                <Home \n                  user={this.props.user}\n                  cards={this.props.cards} \n                  postReading={this.props.postReading} \n                  fetchReadings ={this.props.fetchReadings}\n                />\n              </LoggedInWrapper>\n            )}\n          />\n          \n          <Route\n            path='/user_readings'\n            render={() => (\n              <LoggedInWrapper loggedInStatus={this.props.isLoggedIn}>\n                <UserReadings \n                  user={this.props.user} \n                  readings={this.props.readings} \n                  fetchReadings={this.props.fetchReadings} \n                  deleteReading={this.props.deleteReading} \n                />\n              </LoggedInWrapper>\n            )}\n          />\n\n          <Route\n            path='/account_settings'\n            render={() => (\n              <LoggedInWrapper loggedInStatus={this.props.isLoggedIn}>\n                <AccountSettings\n                  user={this.props.user}\n                  updateUserAfterAccountSettingsEdit = {this.updateUserAfterAccountSettingsEdit}\n                  updateUserAccount = {this.props.updateUserAccount}\n                  errors={this.props.update_errors}\n                />           \n              </LoggedInWrapper>\n            )}\n          />\n\n          <Route\n            path='/trends'\n            render={() => (\n              <LoggedInWrapper loggedInStatus={this.props.isLoggedIn}>\n                <Trends\n                  user={this.props.user}\n                  metricsLoading = {this.props.metricsLoading}\n                  fetchUserArcana = {this.props.fetchUserArcana}\n                  fetchUserOrientations = {this.props.fetchUserOrientations}\n                  fetchHighUserArcana = {this.props.fetchHighUserArcana}\n                  fetchHighUserOrientation = {this.props.fetchHighUserOrientation}\n                  fetchAllArcana = {this.props.fetchAllArcana}\n                  fetchAllOrientations = {this.props.fetchAllOrientations}\n                  allArcana = {this.props.metrics.all_arcana}\n                  allOrientations = {this.props.metrics.all_orientations}\n                  fetchHighArcanaForAllUsers = {this.props.fetchHighArcanaForAllUsers}\n                  fetchHighOrientationForAllUsers = {this.props.fetchHighOrientationForAllUsers}\n                />           \n              </LoggedInWrapper>         \n            )}\n          />\n          \n          <Route\n            path='/create_account'\n            render={() => (\n              <LoginPageWrapper>\n                <Signup \n                  createUserAccount={this.props.createUserAccount}\n                  user={this.props.user}\n                  errors={this.props.signup_errors}\n                  loggedInStatus={this.props.isLoggedIn}\n                />\n              </LoginPageWrapper>\n            )}\n          />\n\n          <Route\n            path='/'\n            render={() => (\n              <LoginPageWrapper>\n                <LoginPage \n                  loggedInStatus={this.props.isLoggedIn} \n                  isUserLoggingIn={this.props.isLoggingIn}\n                  errors={this.props.login_errors} \n                  fetchReadings={this.props.fetchReadings} \n                  loginUser={this.props.loginUser}\n                />\n              </LoginPageWrapper>\n            \n            )}\n          />\n\n        </Switch>\n\n        </div>\n    </Router>\n\n    </div>\n      \n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    cards: state.cards,\n    readings: state.readings,\n    user: state.users.user, \n    isLoggingIn: state.users.isLoggingIn,\n    isLoggedIn: state.users.isLoggedIn,\n    login_errors: state.users.login_errors,\n    signup_errors: state.users.signup_errors,\n    update_errors: state.users.update_errors,\n    deleted: state.users.deleted,\n    metricsLoading: state.users.metricsLoading,\n    metrics: state.users.metrics \n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  createUserAccount: user => dispatch(createUserAccount(user)),\n  updateUserAccount: user => dispatch(updateUserAccount(user)),\n  deleteUserAccount: userId => dispatch(deleteUserAccount(userId)),\n  loginUser: user => dispatch(loginUser(user)),\n  logoutUser: () => dispatch(logoutUser()),\n  fetchCards: () => dispatch(fetchCards()),\n  fetchReadings: userId => dispatch(fetchReadings(userId)), \n  postReading: readingObject => dispatch(postReading(readingObject)),\n  deleteReading: readingObject => dispatch(deleteReading(readingObject)),\n  fetchUserArcana: userId => dispatch(fetchUserArcana(userId)),\n  fetchHighUserArcana: userId => dispatch(fetchHighUserArcana(userId)),\n  fetchHighUserOrientation: userId => dispatch(fetchHighUserOrientation(userId)),\n  fetchAllArcana: () => dispatch(fetchAllArcana()),\n  fetchUserOrientations: userId => dispatch(fetchUserOrientations(userId)),\n  fetchAllOrientations: () => dispatch(fetchAllOrientations()),\n  fetchHighArcanaForAllUsers: () => dispatch(fetchHighArcanaForAllUsers()),\n  fetchHighOrientationForAllUsers: () => dispatch(fetchHighOrientationForAllUsers())\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","export const loginUser = (user) => { \n    return(dispatch) => {\n        dispatch({type: 'LOGGING_IN_USER'});\n        fetch('https://ori-tarot-api.herokuapp.com/login', {\n            method: 'POST',\n            body: JSON.stringify({user}),\n            headers:{\n                'Content-Type':'application/json'\n                }\n            })\n            .then(resp => resp.json())\n            .then(resp => {\n                if (resp.logged_in){\n                   return dispatch({type: 'LOGIN_SUCCESSFUL', payload: resp})\n                } \n                return dispatch({type: 'LOGIN_FAILED', payload: resp})\n            })\n    }\n}\n\nexport const logoutUser = () => { \n    return(dispatch) => {\n        dispatch({type: 'LOGGING_OUT_USER'});\n        fetch('https://ori-tarot-api.herokuapp.com/logout', {\n            method: 'DELETE'\n        })\n            .then(() => {return dispatch({type: 'LOG_OUT_USER'})})\n    }\n}\n\nexport const createUserAccount = (user) => {\n    return (dispatch) => {\n        dispatch({type: 'CREATING_USER_ACCOUNT'});\n        fetch('https://ori-tarot-api.herokuapp.com/users', {\n            method: 'POST',\n            body: JSON.stringify({user}),\n            headers:{\n                'Content-Type':'application/json'\n            }\n        })\n            .then(resp => resp.json())\n            .then(resp => {\n                if (resp.status === 'created') {\n                    return dispatch({type: 'ACCOUNT_CREATED', payload: resp})\n                }\n                return dispatch({type: 'ACCOUNT_CREATION_FAILED', payload: resp})\n            })\n    }\n}\n\nexport const updateUserAccount = (user) => {\n    return (dispatch) => {\n        dispatch({type: 'UPDATING_USER_ACCOUNT'});\n        fetch(`https://ori-tarot-api.herokuapp.com/users/${user.id}`, {\n            method: 'PUT',\n            body: JSON.stringify({user}),\n            headers:{\n                'Content-Type':'application/json'\n            }\n        })\n        .then(resp => resp.json())\n        .then(resp => {\n            if (resp.status === 'updated') {\n                return dispatch({type: 'ACCOUNT_UPDATED', payload: resp})\n            }\n            return dispatch({type: 'ACCOUNT_UPDATE_FAILED', payload: resp})\n        })\n    }\n}\n\nexport const deleteUserAccount = (userId) => {\n    return (dispatch) => {\n        dispatch({type: 'DELETING_USER_ACCOUNT'});\n\n        fetch('https://ori-tarot-api.herokuapp.com/logout', {\n            method: 'DELETE'\n        })\n            .then(() => {\n\n                fetch(`https://ori-tarot-api.herokuapp.com/users/${userId}`, {\n                    method: 'DELETE'\n                })\n                .then(resp => resp.json())\n                .then(resp => {\n                    if (resp.status === 'deleted') {\n                        return dispatch({type: 'ACCOUNT_DELETED'})\n                    }\n                })\n\n            })\n    }\n}\n\nexport const fetchUserArcana = (userId) => {\n    return (dispatch) => {\n        dispatch({type:'LOADING_METRICS'});\n        fetch(`https://ori-tarot-api.herokuapp.com/user_arcana_percentages/${userId}`)\n            .then(resp => resp.json())\n            .then(resp => { \n                dispatch({type:'ADD_USER_ARCANA', payload: resp})\n            })\n    }\n}\n\nexport const fetchUserOrientations = (userId) => {\n    return (dispatch) => {\n        dispatch({type:'LOADING_METRICS'});\n        fetch(`https://ori-tarot-api.herokuapp.com/user_orientation_percentages/${userId}`)\n            .then(resp => resp.json())\n            .then(resp => { \n                dispatch({type:'ADD_USER_ORIENTATIONS', payload: resp})\n            })\n    }\n}\n\nexport const fetchHighUserArcana = (userId) => {\n    return (dispatch) => {\n        dispatch({type:'LOADING_METRICS'});\n        fetch(`https://ori-tarot-api.herokuapp.com/user_highest_arcana_percentage/${userId}`)\n            .then(resp => resp.json())\n            .then(resp => {\n                dispatch({type:'ADD_HIGH_ARCANA', payload: resp.highest})\n            })\n    }\n}\n\nexport const fetchHighUserOrientation = (userId) => {\n    return (dispatch) => {\n        dispatch({type:'LOADING_METRICS'});\n        fetch(`https://ori-tarot-api.herokuapp.com/user_highest_orientation_percentage/${userId}`)\n            .then(resp => resp.json())\n            .then(resp => {\n                dispatch({type:'ADD_HIGH_ORIENTATION', payload: resp.highest})\n            })\n    }\n}\n \n\nexport const fetchAllArcana = () => {\n    return (dispatch) => {\n        dispatch({type:'LOADING_METRICS'});\n        fetch(`https://ori-tarot-api.herokuapp.com/all_arcana_percentages`)\n            .then(resp => resp.json())\n            .then(resp => { \n                dispatch({type:'ADD_ALL_ARCANA', payload: resp})\n            })\n    }\n}\n\nexport const fetchAllOrientations = () => {\n    return (dispatch) => {\n        dispatch({type:'LOADING_METRICS'});\n        fetch(`https://ori-tarot-api.herokuapp.com/all_orientation_percentages`)\n            .then(resp => resp.json())\n            .then(resp => { \n                dispatch({type:'ADD_ALL_ORIENTATIONS', payload: resp})\n            })\n    }\n}\n\nexport const fetchHighArcanaForAllUsers = () => {\n    \n    return (dispatch) => {\n        dispatch({type:'LOADING_METRICS'});\n        fetch(`https://ori-tarot-api.herokuapp.com/all_highest_arcana_percentage`)\n            .then(resp => resp.json())\n            .then(resp => {\n                dispatch({type:'ADD_ALL_HIGH_ARCANA', payload: resp.highest})\n            })\n    }\n}\n\n\nexport const fetchHighOrientationForAllUsers = () => {\n    return (dispatch) => {\n        dispatch({type:'LOADING_METRICS'});\n        fetch(`https://ori-tarot-api.herokuapp.com/all_highest_orientation_percentage`)\n            .then(resp => resp.json())\n            .then(resp => {\n                dispatch({type:'ADD_ALL_HIGH_ORIENTATION', payload: resp.highest})\n            })\n    }\n}","export const fetchCards = () => {\n    return (dispatch) => {\n        dispatch({type: 'LOADING_CARDS'});\n        fetch('https://tarot.howlcode.com/api/v1/cards')\n        .then(resp => resp.json())\n        .then(resp => {\n            dispatch({type: 'ADD_CARDS', payload: resp})\n        })\n    }\n}\n\n\n\n\n\n\n\n","export const postReading = (readingObj) => { \n    return (dispatch) => {\n        dispatch({type:'SAVING_READING'});\n        fetch('https://ori-tarot-api.herokuapp.com/readings', {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/json'\n            },\n            body:JSON.stringify({reading: {user_id: readingObj.past.user_id}})\n        })\n        .then(resp => resp.json())\n        .then(resp => {\n            let updatedReadingObj = Object.assign({}, readingObj, {reading_id: resp.id})\n            fetch('https://ori-tarot-api.herokuapp.com/cards', {\n                method:'POST',\n                headers:{\n                    'Content-Type':'application/json'\n                },\n                body:JSON.stringify({card: {...updatedReadingObj}})\n            })\n            .then(resp => resp.json())\n            .then(resp => {\n                dispatch({type:'READING_SAVED', payload: resp})\n            })\n        })\n    }\n}\n\nexport const deleteReading = (reading) => { \n    return (dispatch) => {\n        dispatch({type: 'DELETING_READING'});\n            fetch(`https://ori-tarot-api.herokuapp.com/readings/${reading.id}`, {\n                method: 'DELETE'\n            })\n            .then(resp => resp.json())\n            .then(resp => {\n                dispatch({type: 'READING_DELETED', payload: resp})\n            })\n    }\n}\n\nexport const fetchReadings = (userId) => {\n    return (dispatch) => {\n        dispatch({type:'LOADING_READINGS'});\n        fetch(`https://ori-tarot-api.herokuapp.com/loggedin_user_readings/${userId}`)\n            .then(resp => resp.json())\n            .then(resp => {\n                dispatch({type:'ADD_READINGS', payload: resp})\n            })\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport {createStore, applyMiddleware, compose, combineReducers} from 'redux'\nimport thunk from 'redux-thunk'\nimport App from './App'\nimport './App.css';\nimport { cards } from './reducers/cards'\nimport { readings } from './reducers/readings'\nimport { users } from './reducers/users'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst rootReducer = combineReducers({ cards, readings, users })\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n","export const cards = (state = [], action) => {\n    const storeStates = {\n        'LOADING_CARDS': state,\n        'ADD_CARDS': action.payload\n    }\n    return typeof storeStates[action.type] !== \"undefined\" ? storeStates[action.type] : state \n}\n\n","export const readings = (state = [], action) => {\n    const storeStates = {\n        'LOADING_READINGS': state,\n        'ADD_READINGS': action.payload,\n        'SAVING_READINGS': state,\n        'READING_SAVED': action.payload,\n        'DELETING_READING': state,\n        'READING_DELETED': action.payload\n    }\n    \n    return typeof storeStates[action.type] !== \"undefined\" ? storeStates[action.type] : state \n}\n","export const users = (state = {\n    isLoggingIn: false,\n    isLoggedIn: false,\n    login_errors: null,\n    signup_errors: null,\n    update_errors: null,\n    deleted: false,\n    user: null,\n    metricsLoading: false,\n    metrics: {\n        user_arcana: {},\n        high_arcana: {},\n        high_orientation: {},\n        all_arcana: {},\n        all_high_arcana: {},\n        user_orientations: {},\n        all_orientations: {},\n        all_high_orientation: {}\n    }\n}, action) => { \n    let user = typeof action.payload !== \"undefined\" ? action.payload.user : null\n    let login_errors = typeof action.payload !== \"undefined\" ? action.payload.login_errors : null\n    let signup_errors = typeof action.payload !== \"undefined\" ? action.payload.signup_errors : null\n    let update_errors = typeof action.payload !== \"undefined\" ? action.payload.update_errors : null\n    const storeStates = {\n        'CREATING_USER_ACCOUNT': state,\n        'ACCOUNT_CREATED': {...state, isLoggedIn: true, signup_errors: null, user: user},\n        'ACCOUNT_CREATION_FAILED': {...state, signup_errors: signup_errors, user: null},\n        'UPDATING_USER_ACCOUNT': state,\n        'ACCOUNT_UPDATED': {...state, update_errors: null, user: user},\n        'ACCOUNT_UPDATE_FAILED': {...state, update_errors: update_errors},\n        'DELETING_USER_ACCOUNT': state,\n        'ACCOUNT_DELETED': {...state, isLoggedIn: false, user: null, deleted: true}, \n        'LOGGING_IN_USER': {...state, isLoggingIn: true},\n        'LOGGING_OUT_USER': state,\n        'LOGIN_SUCCESSFUL': {...state, isLoggingIn: false, isLoggedIn: true, login_errors: null, user: user},\n        'LOGIN_FAILED': {...state, isLoggedIn: false, login_errors: login_errors},\n        'LOG_OUT_USER': {...state, isLoggedIn: false, user: null},\n        'LOADING_METRICS': {...state, metricsLoading: true},\n        'ADD_USER_ARCANA': {...state, metricsLoading: false, metrics: {...state.metrics, user_arcana: action.payload}},\n        'ADD_HIGH_ARCANA': {...state, metricsLoading: false, metrics: {...state.metrics, high_arcana: action.payload}},\n        'ADD_HIGH_ORIENTATION': {...state, metricsLoading: false, metrics: {...state.metrics, high_orientation: action.payload}},\n        'ADD_ALL_ARCANA': {...state, metricsLoading: false, metrics: {...state.metrics, all_arcana: action.payload}},\n        'ADD_ALL_HIGH_ARCANA': {...state, metricsLoading: false, metrics: {...state.metrics, all_high_arcana: action.payload}},\n        'ADD_USER_ORIENTATIONS': {...state, metricsLoading: false, metrics: {...state.metrics, user_orientations: action.payload}},\n        'ADD_ALL_ORIENTATIONS': {...state, metricsLoading: false, metrics: {...state.metrics, all_orientations: action.payload}},\n        'ADD_ALL_HIGH_ORIENTATION': {...state, metricsLoading: false, metrics: {...state.metrics, all_high_orientation: action.payload}}\n    }\n    return typeof storeStates[action.type] !== \"undefined\" ? storeStates[action.type] : state \n}\n"],"sourceRoot":""}